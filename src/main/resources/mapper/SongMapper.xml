<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ebook.user.dao.SongMapper" >
  <resultMap id="BaseResultMap" type="com.ebook.user.model.Song" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="songId" property="songid" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="singer" property="singer" jdbcType="VARCHAR" />
    <result column="pic" property="pic" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ebook.user.model.Song" extends="BaseResultMap" >
    <result column="lrc" property="lrc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, songId, name, singer, pic, url, time, lrc
  </sql>
  <sql id="Blob_Column_List" >
    lrc
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.ebook.user.model.SongExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from song
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ebook.user.model.SongExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from song
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from song
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from song
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ebook.user.model.SongExample" >
    delete from song
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ebook.user.model.Song" >
    insert into song (id, songId, name, 
      singer, pic, url, time, 
      lrc)
    values (#{id,jdbcType=INTEGER}, #{songid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{singer,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{time,jdbcType=INTEGER}, 
      #{lrc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ebook.user.model.Song" >
    insert into song
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="songid != null" >
        songId,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="singer != null" >
        singer,
      </if>
      <if test="pic != null" >
        pic,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="lrc != null" >
        lrc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="songid != null" >
        #{songid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="singer != null" >
        #{singer,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=INTEGER},
      </if>
      <if test="lrc != null" >
        #{lrc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ebook.user.model.SongExample" resultType="java.lang.Integer" >
    select count(*) from song
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update song
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.songid != null" >
        songId = #{record.songid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.singer != null" >
        singer = #{record.singer,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null" >
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=INTEGER},
      </if>
      <if test="record.lrc != null" >
        lrc = #{record.lrc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update song
    set id = #{record.id,jdbcType=INTEGER},
      songId = #{record.songid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      singer = #{record.singer,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=INTEGER},
      lrc = #{record.lrc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update song
    set id = #{record.id,jdbcType=INTEGER},
      songId = #{record.songid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      singer = #{record.singer,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ebook.user.model.Song" >
    update song
    <set >
      <if test="songid != null" >
        songId = #{songid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="singer != null" >
        singer = #{singer,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=INTEGER},
      </if>
      <if test="lrc != null" >
        lrc = #{lrc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ebook.user.model.Song" >
    update song
    set songId = #{songid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      singer = #{singer,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      time = #{time,jdbcType=INTEGER},
      lrc = #{lrc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ebook.user.model.Song" >
    update song
    set songId = #{songid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      singer = #{singer,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      time = #{time,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="insertBatch" parameterType="com.ebook.user.model.Song" >
    insert into song (songId, name,
      singer, pic, url, time,
      lrc)
    values
    <foreach collection="list" item="song" separator=",">
    (
      #{song.songid,jdbcType=VARCHAR},
      #{song.name,jdbcType=VARCHAR},
      #{song.singer,jdbcType=VARCHAR},
      #{song.pic,jdbcType=VARCHAR},
      #{song.url,jdbcType=VARCHAR},
      #{song.time,jdbcType=INTEGER},
      #{song.lrc,jdbcType=LONGVARCHAR})
    </foreach>
  </insert>

  <select id="searchSong" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from song
    where name like #{name,jdbcType=VARCHAR} or singer like  #{name,jdbcType=VARCHAR}
  </select>

</mapper>